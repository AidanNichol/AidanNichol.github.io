---
export interface Props {
  left?: string;
  right?: string;
  rotate?: boolean;
  width?: number;
  height?: number;
}

import _ from 'lodash-es';
import { Image } from 'astro:assets';
import { parseImageName } from '@utils/parseImageName.mjs';

let { left, right, rotate, width = undefined, height = undefined } = Astro.props as Props;
// console.log(Astro.props);
if (!width && !height) width = 150;
let imgR: string, imgL;
let svgR, svgL;
let [subL, baseL, extL] = parseImageName(left);
let [subR, baseR, extR] = parseImageName(right);

if (extL === 'svg') svgL = baseL;
else imgL = baseL;
if (extR === 'svg') svgR = baseR;
else imgR = baseR;
---

<div class:list={{ table: true, left, right, rotate }}>
  {svgL && <img src={`/images/${svgL}.svg`} width={width} height={height} />}
  {
    imgL && (
      <Image
        src={import(`../assets/images/${subL}/${imgL}.jpg`)}
        width={width}
        height={height}
        alt=''
      />
    )
  }
  <slot />
  {svgR && <img src={`/images/${svgR}.svg`} width={width} height={height} />}
  {
    imgR && (
      <Image
        src={import(`../assets/images/${subR}/${imgR}.jpg`)}
        width={width}
        height={height}
        alt=''
      />
    )
  }
</div>
<style>
  .table {
    padding-top: 0.3em;
    display: grid;
    gap: 0.5rem;
    margin: 0;
    align-items: center;
  }
  .table.right {
    grid-template-columns: 1fr auto;
  }
  .table.left {
    grid-template-columns: auto 1fr;
  }
  .table.left.right {
    grid-template-columns: auto 1fr auto;
  }
  .table :global(p) {
    margin: 0;
  }
  .table :global(img) {
  }
  .rotate :global(img) {
    transform: rotate(90deg);
  }
  .table :global(img:hover) {
    transform: scale(2);
    z-index: 1;
    position: relative;
  }
</style>
