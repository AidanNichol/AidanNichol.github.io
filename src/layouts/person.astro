---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '@layouts/default.astro';
import { parseImageName } from '@utils/parseImageName.mjs';
import { getPersonsWorks } from '@utils/getPersonsWorks.mjs';
import type { CollectionEntry } from 'astro:content';
import Box from '@components/Box.astro';
const thisFile = import.meta.url;
interface Props {
  post: CollectionEntry<'heritage'>;
}
const { frontmatter: page } = Astro.props;
// console.log('peron', Astro.props);
const collectionEntries = await getCollection(
  page.person,
  (work) => !(work?.id ?? '').includes('/'),
);
// const worksF = await getPersonsWorks(page.person);
const base = import.meta.env.MODE === 'development' ? `${page.person}/` : '';
---

<Layout>
  <Box {thisFile} color='red'>
    <h1>{page.name}</h1>
    <slot />
    <div class='works'>
      {
        collectionEntries.map(async (work) => {
          const data = work.data;
          // let work = workF.frontmatter;
          // console.log('work',work.collection,work.id);
          let [sub, img, extL] = parseImageName(
            data.thumbNail || data.image,
            page.person,
          );
          let url = `/${page.person}/${work.id}`;

          // let img = work.image.replace('.jpg', '');
          return (
            <a href={url}>
              <Image
                src={
                  import(`../assets/images/${sub || data.person}/${img}.${extL ?? 'jpg'}`)
                }
                width={100}
                format='jpeg'
                height={100}
                alt='image of the work'
              />
              {data.shortname || data.title}
            </a>
          );
        })
      }
    </div>
  </Box>
</Layout>

<style>
  .isDev {
    outline: dashed blue;
  }
  [data-isDev] {
    outline: dashed red;
  }
  .works {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 100px));
    gap: 1rem;
    padding: 0;
  }
  a {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: black;
    font-size: 0.5rem;
    & img {
      object-fit: cover;
    }
  }
</style>
